#we need for shared memory for several nginx's workers
lua_shared_dict requests_counter 20m;
#count request on complete (log phase)
log_by_lua_file '/path/to/lua/counter.lua'; 

server {
    listen       127.0.0.1:8890;

    server_name ams.local;

    location /monitor.json {
        content_by_lua '
            local function get_table_keys_count(T) 
                local count = 0
                for _ in pairs(T) do count = count + 1 end
                return count
            end

            local keys = ngx.shared.requests_counter:get_keys(global_keys_count);
            local result = {};
            local server_count = 0;
            local key_count = 0;

            for _, ip in pairs(keys) do
                local key = string.split(ip, ";");

                if result[key[1]] == nil then
                    result[key[1]] = {};
                    result[key[1]][key[2]] = ngx.shared.requests_counter:get(ip);
                    server_count = server_count + 1;
                    key_count = 1;
                else
                    result[key[1]][key[2]] = ngx.shared.requests_counter:get(ip);
                    key_count = key_count + 1;
                end
            end

            ngx.say("[");

            local i = 0;
            for k, v in pairs(result) do
                ngx.say("{");
                ngx.say("\\t\\"server\\": {");
                ngx.say("\\t\\t\\"name\\": \\"" .. k .. "\\",");
                ngx.say("\\t\\t\\"data\\": {");
                
                local index = 0;
                for sk, sv in pairs(result[k]) do
                    local temp = "\\t\\t\\t\\"" .. sk .. "\\": " .. result[k][sk];

                    index = index + 1
                    if index < get_table_keys_count(result[k]) then
                        temp = temp .. ","
                    end
                    ngx.say(temp);
                end

                ngx.say("\\t\\t}");

                i = i + 1;
                if i < server_count then
                    ngx.say("\\t}\\n},");
                else 
                    ngx.say("\\t}\\n}");
                end
            end

            ngx.say("]");
        ';
    }

    #simple output of monitor data 
    location /monitor {
        content_by_lua '
            local keys = ngx.shared.requests_counter:get_keys(10000)
            for _, ip in pairs(keys) do
                ngx.say(ip .. ";" .. ngx.shared.requests_counter:get(ip))
            end
        ';
    }
}
